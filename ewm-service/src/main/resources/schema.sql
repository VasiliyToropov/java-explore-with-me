DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE If EXISTS compilation_events CASCADE;


CREATE TABLE IF NOT EXISTS users(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS locations(
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT,
    lon FLOAT
);

CREATE TABLE IF NOT EXISTS categories(
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) UNIQUE
);

CREATE TABLE IF NOT EXISTS events(
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR(2000),
    category_id BIGINT REFERENCES categories(category_id),
    confirmed_request BIGINT,
    created_on VARCHAR(100),
    description VARCHAR(7000),
    event_date VARCHAR(100),
    initiator_id BIGINT REFERENCES users(user_id),
    location_id BIGINT REFERENCES locations(location_id),
    paid BOOLEAN,
    participant_limit BIGINT,
    published_on VARCHAR(100),
    request_moderation BOOLEAN,
    state VARCHAR(10),
    title VARCHAR(120),
    views BIGINT
);

CREATE TABLE IF NOT EXISTS compilations(
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN,
    title VARCHAR(250)
);

CREATE TABLE IF NOT EXISTS requests(
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created VARCHAR(100),
    event BIGINT,
    requester BIGINT,
    status VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS compilation_events (
    compilation_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    FOREIGN KEY (compilation_id) REFERENCES compilations(compilation_id),
    FOREIGN KEY (event_id) REFERENCES events(event_id)
);

